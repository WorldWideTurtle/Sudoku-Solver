(function(){"use strict";const f={decode(r){let t=new Array(9);for(let e=0;e<81;e+=9){let i=new Array(9);for(let s=0;s<9;s++)i[s]=+r[e+s];t[e/9]=i}return t},encode(r){return r.reduce((t,e)=>t.concat(e.reduce((i,s)=>i+=s.toString(),""),""),"")},isValid(r){const t=this.decode(r);for(let e=0;e<9;e++){let i=new Set,s=new Set,o=new Set,l=t[e];for(let u=0;u<9;u++){const h=l[u],c=t[u][e],g=~~(e/3)*3+~~(u/3),S=t[g][u%3];if(h!==0){if(i.has(h))return!1;i.add(h)}if(c!==0){if(s.has(c))return!1;s.add(c)}if(S!==0){if(o.has(S))return!1;o.add(S)}}}return!0}},n={new:function(r){let t=0;for(let e=0;e<r.length;e++)t=(t<<1|1<<r[e])>>>1;return t},union:(r,t)=>r|t,log2:r=>31-Math.clz32(r)|0,intersect:(r,t)=>r|t,difference:(r,t)=>r^t,subtract:(r,t)=>r&~t,has:function(r,t){return r&1<<t-1},isSingle:function(r){return r&&!(r&r-1)},first:function(r){return this.log2(r&-r)+1},firstBit:function(r){return r&-r},shift:function(r){return r&r-1},delete:function(r,t=0){return(r<<1&~(1<<t))>>>1},removeBit(r,t){return r&~t},add:function(r,t){return(r<<1|1<<t)>>>1},toString:function(r){return r.toString(2)},size:function(r){return r=r-(r>>>1&1431655765),r=(r&858993459)+(r>>>2&858993459),(r+(r>>>4)&252645135)*16843009>>>24},toArray:function(r){let t=new Uint8Array(9),e=0;for(;r>0;)t[e++]=(r&1)*e,r>>>=1;return t}},v=261802,d=[0,9,18,27,36,45,54,63,72,1,10,19,28,37,46,55,64,73,2,11,20,29,38,47,56,65,74,3,12,21,30,39,48,57,66,75,4,13,22,31,40,49,58,67,76,5,14,23,32,41,50,59,68,77,6,15,24,33,42,51,60,69,78,7,16,25,34,43,52,61,70,79,8,17,26,35,44,53,62,71,80],w=[0,1,2,9,10,11,18,19,20,3,4,5,12,13,14,21,22,23,6,7,8,15,16,17,24,25,26,27,28,29,36,37,38,45,46,47,30,31,32,39,40,41,48,49,50,33,34,35,42,43,44,51,52,53,54,55,56,63,64,65,72,73,74,57,58,59,66,67,68,75,76,77,60,61,62,69,70,71,78,79,80];class p{initialState=[];rowState=new Uint8Array(81);activeRowSet=new Uint16Array(9);activeColumnSet=new Uint16Array(9);activeSquareSet=new Uint16Array(9);steps=[[]];activeStep=1;reverseCount=0;itterationCount=0;singleCount=0;hiddenCount=0;guesses=0;solveTime=0;constructor(t){this.initialState=t,t&&this.init()}load(t){this.initialState=t}reset(){this.reverseCount=0,this.itterationCount=0,this.steps=[[]],this.activeStep=1,this.singleCount=0,this.hiddenCount=0,this.guesses=0}splitArray(t,e){let i=new Array(t.length/e);for(let s=0;s<t.length;s+=e){let o=new Uint8Array(e);for(let l=0;l<e;l++)o[l]=t[s+l];i[s/e]=o}return i}init(){if(this.initialState===void 0)return;this.reset();let t=new Uint8Array(this.initialState.flat());this.rowState=t;for(let e=0;e<9;e++){let i=e*9,s=0;for(let o=0;o<9;o++)s|=1<<t[i+o]-1|1<<t[d[i+o]]-1<<9|1<<t[w[i+o]]-1<<18;this.activeRowSet[e]=s&511,this.activeColumnSet[e]=s>>>9&511,this.activeSquareSet[e]=s>>>18&511}}getRowArray=()=>this.splitArray(this.rowState,9);getRowSet=()=>Array.from(this.activeRowSet).map(t=>n.toArray(t));getColumnSet=()=>Array.from(this.activeColumnSet).map(t=>n.toArray(t));getSquareSet=()=>Array.from(this.activeSquareSet).map(t=>n.toArray(t));getEntropy(t,e){return this.getValueAt(t,e)!==0?0:(this.activeRowSet[t]|this.activeColumnSet[e]|this.activeSquareSet[~~(e/3)+~~(t/3)*3])^511}getEntropyAbs(t,e){return(this.activeRowSet[t]|this.activeColumnSet[e]|this.activeSquareSet[~~(e/3)+~~(t/3)*3])^511}getValueAt=(t,e)=>this.rowState[t*9+e];getValueAtIndex=t=>this.rowState[t];checkSolvedCondition(t){return Array.from(t).reduce((e,i)=>e&i,511)===511}isSolved(){return this.checkSolvedCondition(this.activeRowSet)&&this.checkSolvedCondition(this.activeColumnSet)&&this.checkSolvedCondition(this.activeSquareSet)}totalEntropy(){let t=[];for(let e=0;e<9;e++){let i=new Uint8Array(9);for(let s=0;s<9;s++)i[s]=n.size(this.getEntropy(e,s));t.push(i)}return t}solve(t){let e=0;this.solveTime=performance.now(),this.solveHidden();do if(e++,!(this.solveObviousSingles()||this.solveHidden()||this.guess()))break;while(t);this.solveTime=performance.now()-this.solveTime,this.itterationCount+=e}solveObviousSingles(){let t=!1;for(let e=0;e<9;e++)if(this.activeRowSet[e]!==511)for(let i=0;i<9;i++){if(this.rowState[Math.imul(e,9)+i]!==0)continue;const s=(this.activeRowSet[e]|this.activeColumnSet[i]|this.activeSquareSet[~~(i/3)+~~Math.imul(e/3,3)])^511;if(s===0)return this.backTrack();(s&s-1)===0&&(this.set(e,i,n.log2(s)+1),this.singleCount++,t=!0)}return t}solveHidden(){for(let t=0;t<9;t++){if(this.activeRowSet[t]===511)continue;let e=0,i=0;for(let s=8;s!==-1&&e!==511;s--){if(this.rowState[t*9+s]!==0)continue;let o=this.getEntropyAbs(t,s);e|=i&o,i=(i|o)&~e}if(i&&!(i&i-1)){for(let s=8;s!==-1;s--)if(this.rowState[t*9+s]===0&&(this.getEntropyAbs(t,s)&i)!==0)return this.set(t,s,n.log2(i)+1),this.hiddenCount++,!0}}for(let t=8;t!==-1;t--){if(this.activeColumnSet[t]===511)continue;let e=0,i=0;for(let s=0;s<9&&e!==511;s++){if(this.rowState[s*9+t]!==0)continue;let o=this.getEntropyAbs(s,t);e|=i&o,i=(i|o)&~e}if(i&&!(i&i-1)){for(let s=0;s<9;s++)if(this.rowState[s*9+t]===0&&(this.getEntropyAbs(s,t)&i)!==0)return this.set(s,t,n.log2(i)+1),this.hiddenCount++,!0}}return!1}guessCell(t,e,i){this.guesses++;let s=n.first(i);this.set(t,e,s),this.activeStep=this.steps.push([s<<18|(i&i-1)<<9|t<<4|e])}guess(){let t=v,e=0;for(let i=8;i>=0;i--)if(this.activeRowSet[i]!==511){for(let s=8;s>=0;s--)if(this.rowState[i*9+s]===0&&(e=this.getEntropyAbs(i,s),!(n.size(e)>=n.size(t>>>9))&&(t=e<<9|i<<4|s,n.size(e)===2)))return this.guessCell(i,s,e),!0}return t===v?!1:(this.guessCell(t>>>4&15,t&15,t>>>9),!0)}backTrack(){for(;this.activeStep>1;){const t=this.steps[this.activeStep-1];let e=t[0];if(n.size(e>>>9&511)!==0){this.reverseCount+=t.length;for(const s of t)this.reverse(s);let i=n.first(e>>>9&511);this.set(e>>>4&15,e&15,i),this.steps[this.activeStep-1]=[i<<18|n.shift(e>>>9&511)<<9|e&240|e&15];break}else{if(this.activeStep<=2)return!1;this.reverseCount+=t.length;for(const i of this.steps.pop())this.reverse(i);this.activeStep--}}return!1}undo(){if(this.activeStep===0)return;const t=this.steps[this.activeStep-1];this.reverse(t.pop())}set(t,e,i){this.steps[this.activeStep-1].push(i<<18|t<<4|e),this.activeRowSet[t]=this.activeRowSet[t]|1<<i-1,this.activeColumnSet[e]=this.activeColumnSet[e]|1<<i-1,this.activeSquareSet[~~(e/3)+~~(t/3)*3]=this.activeSquareSet[~~(e/3)+~~(t/3)*3]|1<<i-1,this.rowState[t*9+e]=i}reverse(t){const e=t>>>4&15,i=t&15,s=t>>>18;this.activeRowSet[e]=this.activeRowSet[e]&~(1<<s-1),this.activeColumnSet[i]=this.activeColumnSet[i]&~(1<<s-1),this.activeSquareSet[~~(i/3)+~~(e/3)*3]=this.activeSquareSet[~~(i/3)+~~(e/3)*3]&~(1<<s-1),this.rowState[e*9+i]=0}}const a=new p;self.onmessage=r=>{if(r.data.partial===!0)r.data.grids.forEach(t=>{a.load(f.decode(t)),a.init(),a.solve(!0),postMessage(a.solveTime)});else{let t=0,e=r.data.grids,i=e.length;for(let s=0;s<i;s++)a.load(f.decode(e[s])),a.init(),a.solve(!0),t+=a.solveTime;postMessage(t)}}})();
